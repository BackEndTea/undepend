# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

name: "ci"

on:
  pull_request:
  push:
    branches:
      - "master"

env:
  MIN_COVERED_MSI: 100
  MIN_MSI: 100
  REQUIRED_PHP_EXTENSIONS: "mbstring"

jobs:
  coding-standards:
    name: "Coding Standards"

    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        php-version:
          - "7.3"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.0.0"

      - name: "Install PHP with extensions"
        uses: "shivammathur/setup-php@2.0.2"
        with:
          coverage: "none"
          extensions: "${{ env.REQUIRED_PHP_EXTENSIONS }}"
          php-version: "${{ matrix.php-version }}"

      - name: "Validate composer.json and composer.lock"
        run: "composer validate --strict"

      - name: "Determine composer cache directory"
        id: "determine-composer-cache-directory"
        run: "echo \"::set-output name=directory::$(composer config cache-dir)\""

      - name: "Install dependencies with composer"
        run: "composer install --no-interaction --no-progress --no-suggest"



      - name: "Run cs"
        run: "vendor/bin/phpcs"


  static-code-analysis:
    name: "Static Code Analysis"

    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        php-version:
          - "7.4"


    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.0.0"

      - name: "Install PHP with extensions"
        uses: "shivammathur/setup-php@2.0.2"
        with:
          coverage: "none"
          extensions: "${{ env.REQUIRED_PHP_EXTENSIONS }}"
          php-version: "${{ matrix.php-version }}"

      - name: "Determine composer cache directory"
        id: "determine-composer-cache-directory"
        run: "echo \"::set-output name=directory::$(composer config cache-dir)\""

      - name: "Install locked dependencies with composer"
        run: "composer install --no-interaction --no-progress --no-suggest"

      - name: "Run phpstan/phpstan"
        run: "vendor/bin/phpstan analyse --configuration=phpstan.neon"

      - name: "Run vimeo/psalm"
        run: "vendor/bin/psalm --show-info=false --stats"

  tests:
    name: "Tests"

    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        php-version:
          - "7.3"
          - "7.4"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.0.0"

      - name: "Install PHP with extensions"
        uses: "shivammathur/setup-php@2.0.2"
        with:
          coverage: "none"
          extensions: "${{ env.REQUIRED_PHP_EXTENSIONS }}"
          php-version: "${{ matrix.php-version }}"

      - name: "Determine composer cache directory"
        id: "determine-composer-cache-directory"
        run: "echo \"::set-output name=directory::$(composer config cache-dir)\""

      - name: "Install dependencies with composer"
        run: "composer install --no-interaction --no-progress --no-suggest"

      - name: "Run unit tests with phpunit/phpunit"
        run: "vendor/bin/phpunit"
